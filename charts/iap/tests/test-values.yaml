# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
# Default values for iap.

# -- The number of pods to start
replicaCount: 2
# -- The port that the application will run on.
applicationPort: 3443
# -- The port that the Gateway Manager will listen on.
websocketPort: 8080
# -- Toggle to enable TLS features and configuration.
useTLS: true
# -- Toggle the use of websockets (IAG5 integration)
useWebSockets: true
# -- Toggle a volume mount which contains adapter code. When this is set to false it is assumed that
# all adapters will be layered into the Itential provided container.
mountAdapterVolume: false
# -- Toggle a volume with will contain log files. Not required if log data is being captured from
# Stdout.
mountLogVolume: false

certManager:
  # -- Toggles the use of cert-manager for managing the TLS certificates. Setting this to false
  # means that creation of the TLS certificates will be manual and outside of the chart.
  enabled: true

external-dns:
  # -- Optional dependency to generate a static external DNS name
  enabled: false

# The Itential image to use, its version, and its location
# The image name will depend on the entitlement that has been granted.
image:
  # -- The image repository
  repository: 497639811223.dkr.ecr.us-east-2.amazonaws.com/itential-platform-ecm-gm
  # -- The image pull policy
  pullPolicy: IfNotPresent
  # -- The image tag
  tag:

# -- The secrets object used to pull the image from the repo
imagePullSecrets: []

serviceAccount:
  name:

# The issuer to be used if using cert-manager to generate the TLS certificates
issuer:
  # -- Toggle to use the issuer object or not
  enabled: true
  # -- The type of issuer
  kind: ClusterIssuer
  # -- The name of this issuer.
  name: iap-ca-issuer
  # -- The CA secret to be used by this issuer when creating TLS certificates.
  caSecretName: someSecretName

# The certificate object to use by cert-manager to generate the TLS certificates.
certificate:
  # -- Toggle to use the certificate object or not
  enabled: false
  issuerRef:
    # -- The name of the issuer with the CA reference.
    name: iap-ca-issuer
    # -- The issuer type
    kind: Issuer
  # -- Specifies how long before the certificate expires that cert-manager should try to renew.
  renewBefore: 48h
  # -- Specifies how long the certificate should be valid for (its lifetime).
  duration: 2160h
  # -- The Common Name to use when creating certificates
  commonName: iap.example.com
  # -- The domain to use when creating certificates. This will be used by the templates to build a
  # complete list of hosts to enable direct access to individual pods. Some UI actions in Itential
  # require direct access to pods.
  domain: example.com

# Used to configure the storage class object which governs how the mounted volumes are created.
storageClass:
  # -- Toggle the use of storageClass
  enabled: true
  # -- The name of the storageClass
  name: "iap-ebs-gp3"
  # -- Specifies which volume plugin provisions the storage
  provisioner: ""
  # -- What happens to PersistentVolumes when released. Itential recommends "retain".
  reclaimPolicy: "Retain"
  # -- Controls when volume binding occurs
  volumeBindingMode: "WaitForFirstConsumer"
  # -- Key-value pairs passed to the provisioner
  parameters:

# Persistent volumes and persistent volume claims. These are used for Itential application logs and
# for Itential adapters.
persistentVolumeClaims:
  # -- Toggle the use of persistentVolumeClaims
  enabled: true
  # -- This represents the claim for the persistence for the adapters and other custom applications
  # that may have been developed by the customer.
  assetClaim:
    # -- The requested amount of storage
    storage: "10Gi"
  # -- This represents the claim for the persistence for the log files created and written to by the
  # IAP application.
  logClaim:
    # -- The requested amount of storage
    storage: "10Gi"

# The Kubernetes service object for this application
service:
  # -- The service type.
  type: "ClusterIP"
  # -- The name of this Kubernetes service object.
  name: "iap-service"
  # -- The port that this service object is listening on.
  port: 443

# The Kubernetes ingress object for this application.
ingress:
  # -- The ingress object can be disabled and will not be created with this set to false
  enabled: true
  # -- The name of this Kubernetes ingress object
  name: "iap-ingress"
  # -- The ingress controller class name
  className: "alb"
  # -- The ingress controller path type
  pathType: Prefix
  # Load balancer configuration
  loadBalancer:
    # -- Enable a load balancer that will distribute request to all Itential pods
    enabled: true
    # -- The Load balancer host name
    host: iap.pet-sbx.itential.io
    # -- The path
    path: /
  # Direct access configuration
  directAccess:
    # -- Enable direct access to all Itential pods.
    enabled: true
    # -- The base domain for each Itential pod, used by the templates to create host names.
    baseDomain: pet-sbx.itential.io
    # -- The path
    path: /
  # -- The annotations for this ingress object. These are passed into the template as is and will
  # render as you see here. Itential leveraged AWS ALB but others should work.
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: "HTTPS"
    alb.ingress.kubernetes.io/healthcheck-path: "/health/status"
    alb.ingress.kubernetes.io/healthcheck-port: "3443"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTPS"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    # Include port 8080 if using Gateway Manager with IAG5, otherwise remove it
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443},{"HTTPS": 8080}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    alb.ingress.kubernetes.io/load-balancer-name: "itential-iap-lb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    alb.ingress.kubernetes.io/websocket-paths: "/ws"
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=3600
  # TLS is terminated at the statefulset pod by design.
  tls: []

statefulset:
  enabled: true

# -- Additional pod annotations
podAnnotations: {}
# -- Additional pod labels
podLabels: {}
# -- Additional pod security context. The pods will mount some persistent volumes. These settings
# allow for that to happen.
podSecurityContext:
  fsGroup: 1001
  runAsUser: 100 # run as the 'itential' user
  runAsNonRoot: true
# -- Additional security context
securityContext: {}

# Container resources
resources:
  limits:
    memory: "14Gi"
  requests:
    cpu: "3"
    memory: "14Gi"

# The liveness probe used to determine if the container is alive. If the liveness probe fails,
# the kubelet kills the container, and the container is subjected to its restart policy. If a
# container does not provide a liveness probe, the default state is Success.
livenessProbe:
  enabled: false
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  path: "/health/status"

# The readiness probe used to determine if the container is ready to accept requests. If the
# readiness probe fails, the endpoints controller removes the pod’s IP address from the
# endpoints of all services that match the pod. The default state of readiness before the
# initial delay is failure. If a container does not provide a readiness probe, the default
# state is success.
readinessProbe:
  enabled: false
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
  path: "/health/status"

# The startup probe used to allow some time for the application to start up. The application
# will have a maximum of 3 minutes (18 * 10 = 180s) to finish its startup. Once the startup
# probe has succeeded once, the liveness probe takes over.
startupProbe:
  enabled: false
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 18
  successThreshold: 1
  path: "/health/status"

# -- Additional volumes to output on the Statefulset definition.
volumes: []

# -- Additional volumeMounts to output on the Statefulset definition.
volumeMounts: []

# -- Additional nodeSelectors
nodeSelector: {}

# -- Additonal tolerations
tolerations: []

# -- Additional affinities
affinity: {}

# Configuration properties for Itential Automation Platform.
# In most cases, the default values are sufficient. If the property is commented that means that
# the default value is being used. This is a list of all possible values for convenience. The
# values listed are the defaults where commented.
env:
  ##############
  #SERVER
  ##############
  # The name of the profile document to load from the MongoDB where legacy configuration
  # properties are stored. Not required for installations that are using environment
  # variables or a properties file.
  # ITENTIAL_PROFILE_ID: ""

  # An identifier for the server instance. This is used to uniquely identify the server in a
  # multi-server environment. If not provided, the server will generate one on startup. This will
  # be populated by the chart to the pod id and should not be used in a containerized deployment.
  # ITENTIAL_SERVER_ID: ""

  # The file path to the directory containing additional services (applications and adapters).
  # The chart will impose this value with an opinionated volume mount directory and should not be
  # used in a containerized deployment.
  # ITENTIAL_SERVICE_DIRECTORY: ""

  # Indicates whether the platform is using encrypted code files.
  # ITENTIAL_PLATFORM_ENCRYPTED: "true"

  # 64-length hex string describing a 256 bit encryption key.
  # ITENTIAL_ENCRYPTION_KEY: ""

  # A whitelist of services (applications/adapters) to initialize on startup of the platform.
  # If no value is given, all services will be initialized.
  # ITENTIAL_SERVICES: ""

  # The service type that will be denied CRUD operation access.
  # ITENTIAL_SERVICE_BLACKLIST : ""

  # The amount of time a service should wait before shutting down, in seconds.
  # ITENTIAL_PLATFORM_SHUTDOWN_TIMEOUT: "3"

  # How often to update service health, measured in seconds.
  # ITENTIAL_SERVICE_HEALTH_CHECK_INTERVAL : "5"

  # The number of failed health checks in a row before a service is considered to be “unhealthy”.
  # ITENTIAL_SERVICE_HEALTH_CHECK_UNHEALTHY_THRESHOLD: "3"

  # If true, the platform will periodically check for dead processes.
  # ITENTIAL_DEAD_PROCESS_CHECK_ENABLED: "true"

  # How often to check if application/adapter stopped sending healthcheck pings, in seconds.
  # ITENTIAL_DEAD_PROCESS_CHECK_INTERVAL: "5"

  # Maximum time period for application/adapter without sending healthcheck ping, in seconds.
  # ITENTIAL_DEAD_PROCESS_MAX_PERIOD: "15"

  # Specifies the amount of times services will retry on crash before stopping.
  # ITENTIAL_SERVICE_CRASH_RECOVERY_MAX_RETRIES: "10"

  # Specifies the amount of times between each retry before the count will reset in milliseconds.
  # ITENTIAL_SERVICE_CRASH_RECOVERY_RESET_RETRIES_AFTER_MS: "60000"

  # The timeout for external API requests, in seconds.
  # ITENTIAL_EXTERNAL_REQUEST_TIMEOUT : "5"

  # The interval for how often IAP polls for the number of devices, in hours.
  # ITENTIAL_DEVICE_COUNT_POLLING_INTERVAL : "24"

  # If true, the platform will track detailed audit events.
  # ITENTIAL_AUDIT_ENABLED: "true"

  #############################
  # MONGO DATABASE CONNECTION #
  #############################
  # -- Instructs the MongoDB driver to use the provided user/password when connecting to MongoDB.
  ITENTIAL_MONGO_AUTH_ENABLED: "true"

  # -- The username to use when connecting to MongoDB.
  ITENTIAL_MONGO_USER: "itential"

  # The password to use when connecting to MongoDB.
  # ITENTIAL_MONGO_PASSWORD: ""

  # The name of the database that the MongoDB user must authenticate against.
  # ITENTIAL_MONGO_AUTH_DB: ""

  # If true, the server will not check if it is connecting to a compatible MongoDB version.
  # ITENTIAL_MONGO_BYPASS_VERSION_CHECK: "true"

  # -- The name of the MongoDB logical database to connect to.
  ITENTIAL_MONGO_DB_NAME: "itential"

  # The MongoDB connection string. For a replica set this will include all members of the
  # replica set. For Mongo Atlas this will be the SRV connection format.
  # ITENTIAL_MONGO_URL: ""

  # -- Instruct the MongoDB driver to use TLS protocols when connecting to the database.
  ITENTIAL_MONGO_TLS_ENABLED: "false"

  # -- If true, disables the validation checks for TLS certificates on other servers in the cluster
  # and allows the use of invalid or self-signed certificates to connect.
  ITENTIAL_MONGO_TLS_ALLOW_INVALID_CERTIFICATES: "false"

  # The .pem file that contains the root certificate chain from the Certificate Authority.
  # Specify the file name of the .pem file using absolute paths.
  # ITENTIAL_MONGO_TLS_CA_FILE: ""

  # The maximum number of connections in a connection pool.
  # Each application/adapter has its own connection pool.
  # ITENTIAL_MONGO_MAX_POOL_SIZE: ""

  ####################
  # REDIS CONNECTION #
  ####################
  # The Redis keyspace (database number) to use for the connection.
  # ITENTIAL_REDIS_DB: ""

  # -- The username to use when connecting to Redis.
  ITENTIAL_REDIS_USERNAME: "itential"

  # The password to use when connecting to Redis.
  # ITENTIAL_REDIS_PASSWORD: ""

  # The maximum number of times to retry a request to Redis when the connection is lost.
  # ITENTIAL_REDIS_MAX_RETRIES_PER_REQUEST : "20"

  # The maximum number of times to retry writing a heartbeat message to Redis from a service.
  # ITENTIAL_REDIS_MAX_HEARTBEAT_WRITE_RETRIES: "20"

  # -- The hostname of the Redis server. Not used when connecting to Redis Sentinels.
  ITENTIAL_REDIS_HOST: "redis.example.com"

  # -- The port to use when connecting to this Redis instance.
  ITENTIAL_REDIS_PORT: "6379"

  # The username to use when authenticating with a Redis Sentinel cluster.
  #ITENTIAL_REDIS_SENTINEL_USERNAME: "itential"

  # The password to use when authenticating with a Redis Sentinel cluster
  #ITENTIAL_REDIS_SENTINEL_PASSWORD: ""

  # The list of Redis Sentinel servers (hostnames and ports) to use for high availability.
  # Sample: [{"host": "172.85.0.20", "port": 26379}]
  #ITENTIAL_REDIS_SENTINELS: '[]'

  # The Redis primary name. This only has meaning when Redis is running with replication enabled.
  # The sentinels will monitor this node and consider it down only when the sentinels agree.
  # Note: The primary name should not include special characters other than: .-_ and no whitespaces.
  #ITENTIAL_REDIS_NAME: ""

  # Redis TLS configuration options for secure connections.
  # Refer to NodeJS TLS library for all supported options.
  # This must be set to "{}" if connecting to elasticache
  # ITENTIAL_REDIS_TLS: ""

  ##############################
  # HASHICORP VAULT CONNECTION #
  ##############################
  # The URL to the Hashicorp Vault server.
  # ITENTIAL_VAULT_URL: ""

  # The authorization method to connect to Hashicorp Vault. Either token or approle.
  # ITENTIAL_VAULT_AUTH_METHOD: ""

  # Hashicorp Vault Role ID used for AppRole authentication.
  # ITENTIAL_VAULT_ROLE_ID: ""

  # Hashicorp Vault Secret ID used for AppRole login.
  # ITENTIAL_VAULT_SECRET_ID: ""

  # The path where the AppRole was enabled.
  # ITENTIAL_VAULT_APPROLE_PATH: ""

  # The file path to a token file. The token is used for authentication to access Vault secrets.
  # ITENTIAL_VAULT_TOKEN: ""

  # The endpoint for the Secrets Engine that is used.
  # ITENTIAL_VAULT_SECRETS_ENDPOINT: ""

  # If true, only reads secrets from Hashicorp Vault. Otherwise, the platform can write secrets
  # to Vault for storage.
  # ITENTIAL_VAULT_READ_ONLY: "true"

  ###################
  # WORKFLOW WORKER #
  ###################
  # If true, will start working tasks immediately after the server startup process is complete.
  # If false, the task worker must be enabled manually via the UI/API.
  # ITENTIAL_TASK_WORKER_ENABLED: "true"

  # If true, will allow jobs to be started after the server startup process is complete.
  # If false, API calls to start Jobs will return an error until enabled manually via the UI/API.
  # ITENTIAL_JOB_WORKER_ENABLED: "true"

  ######################
  # INTEGRATION WORKER #
  ######################
  # The number of threads available for API requests.
  # ITENTIAL_INTEGRATION_THREAD_COUNT: "5"

  # The number of milliseconds until an integration request times out.
  # ITENTIAL_INTEGRATION_TIMEOUT: "15000"

  ###############
  # PLATFORM UI #
  ###############
  # Path to the layout file extended in pug templates.
  # ITENTIAL_UI_LAYOUT_FILE: ""

  # Path to the HTML file that will be displayed as the home page for the UI.
  # ITENTIAL_UI_HOME_FILE: "node_modules/@itential/iap-ui/build/index.html"

  # Path to the HTML file that will be displayed as the login page for the UI.
  # ITENTIAL_UI_LOGIN_FILE: "node_modules/@itential/iap-ui/build/index.html"

  # Path to the HTML file that will be displayed as the profile page for the UI.
  # ITENTIAL_UI_PROFILE_FILE: "node_modules/@itential/iap-ui/build/index.html"

  # Path to the favicon file that will be displayed in the browser tab.
  # ITENTIAL_UI_FAVICON: "ui/img/favicon.ico"

  # Path to the apple touch icon file that will be displayed on iOS devices.
  # ITENTIAL_UI_APPLE_TOUCH_ICON_FILE: "ui/img/apple-touch-icon.png"

  ##################
  # AUTHENTICATION #
  ##################
  # If true, logs out existing sessions for a user when they log in with a new session.
  # ITENTIAL_AUTH_UNIQUE_SESSIONS_ENABLED: "false"

  # Members of these groups will be implicitly assigned with admin permissions.
  # ITENTIAL_AUTH_ADMIN_GROUPS: '[]'

  # Enables a AAA adapter to custom build the principal object for a user with
  # a "buildPrincipal" method.
  # ITENTIAL_AUTH_BROKER_PRINCIPAL_ENABLED: "false"

  # The name of the cookie used for a user session.
  # ITENTIAL_AUTH_SESSION_COOKIE_NAME: "token"

  # The time in minutes before a user session expires.
  # ITENTIAL_AUTH_SESSION_TTL: "60"

  # Enables a default user to be used for login when SSO is not configured and no AAA Adapter exists.
  # ITENTIAL_DEFAULT_USER_ENABLED: "true"

  # The username of the default user.
  # ITENTIAL_DEFAULT_USER_USERNAME: "admin"

  # The password of the default user.
  # ITENTIAL_DEFAULT_USER_PASSWORD: ""

  #############
  # WEBSERVER #
  #############
  # A toggle to instruct the webserver to include HTTP cache control headers on the response.
  # ITENTIAL_WEBSERVER_CACHE_CONTROL_ENABLED: "false"

  # Timeout to use for incoming HTTP requests to the platform API, in milliseconds.
  # ITENTIAL_WEBSERVER_TIMEOUT: "300000"

  # The value of the HTTP Access-Control-Allow-Origin header returned to clients.
  # ITENTIAL_WEBSERVER_RESPONSE_HEADER_ACCESS_CONTROL_ALLOW_ORIGIN: "*"

  # If true, allows the webserver to respond to insecure HTTP requests.
  # ITENTIAL_WEBSERVER_HTTP_ENABLED: "false"

  # If true, allows the webserver to respond to secure HTTPS requests.
  # ITENTIAL_WEBSERVER_HTTPS_ENABLED: "true"

  # The path to the public key file used for HTTPS connections.
  # ITENTIAL_WEBSERVER_HTTPS_KEY: "/etc/ssl/certs/platform/server.key"

  # The passphrase for the private key used to enable TLS sessions.
  # ITENTIAL_WEBSERVER_HTTPS_PASSPHRASE: ""

  # The path to the certificate file used for HTTPS connections.
  # ITENTIAL_WEBSERVER_HTTPS_CERT: "/etc/ssl/certs/platform/server.crt"

  # The set of allowed SSL/TLS protocol versions.
  # ITENTIAL_WEBSERVER_HTTPS_SECURE_PROTOCOL: "TLSv1_2_method"

  # The allowed SSL/TLS cipher suite.
  # ITENTIAL_WEBSERVER_HTTPS_CIPHERS: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA"

  # Specifies the number of renegotiations that are allowed in a single HTTPS connection.
  # ITENTIAL_WEBSERVER_HTTPS_CLIENT_RENEG_LIMIT: "3"

  # Specifies the time renegotiation window in seconds for a single HTTPS connection.
  # ITENTIAL_WEBSERVER_HTTPS_CLIENT_RENEG_WINDOW: "600"

  # The set of allowed HTTP verbs in addition to those defined in the standard HTTP/1.1 protocol.
  # ITENTIAL_WEBSERVER_HTTP_ALLOWED_OPTIONAL_VERBS: ""

  ###########
  # LOGGING #
  ###########
  # The maximum number of each log file to keep as rotation occurs.
  # ITENTIAL_LOG_MAX_FILES: "100"

  # The maximum file size in bytes of each log file before rotation occurs.
  # ITENTIAL_LOG_MAX_FILE_SIZE: "1048576"

  # The minimum log level to display in the log file.
  # ITENTIAL_LOG_LEVEL: "info"

  # The absolute directory path where log files are written.
  # ITENTIAL_LOG_DIRECTORY: "/var/log/itential/platform"

  # The name of the primary platform log file.
  # ITENTIAL_LOG_FILENAME: "platform.log"

  # The minimum log level to display in the console (stdout).
  # ITENTIAL_LOG_LEVEL_CONSOLE: "warn"

  # The absolute directory path where webserver log files are written.
  # ITENTIAL_WEBSERVER_LOG_DIRECTORY: "/var/log/itential/platform"

  # The name of the webserver log file.
  # ITENTIAL_WEBSERVER_LOG_FILENAME: "webserver.log"

  # The minimum log level to send to the syslog server.
  # ITENTIAL_LOG_LEVEL_SYSLOG: "warning"

  # The hostname or IP address of the syslog server.
  # ITENTIAL_SYSLOG_HOST: "localhost"

  # The port number of the syslog server.
  # ITENTIAL_SYSLOG_PORT: "514"

  # The protocol to use when sending logs to the syslog server.
  # ITENTIAL_SYSLOG_PROTOCOL: "udp4"

  # The syslog facility to use when sending logs to the syslog server.
  # ITENTIAL_SYSLOG_FACILITY: "local0"

  # The syslog message format to use when sending logs to the syslog server.
  # ITENTIAL_SYSLOG_TYPE: "BSD"

  # The path to the syslog server file.
  # ITENTIAL_SYSLOG_PATH: "/dev/log"

  # The process property to include as the process id in the syslog message.
  # ITENTIAL_SYSLOG_PID: "process.pid"

  # The hostname to include in the syslog message.
  # ITENTIAL_SYSLOG_LOCALHOST: "localhost"

  # The process property to include as the application name in the syslog message.
  # ITENTIAL_SYSLOG_APP_NAME: "process.title"

  # The end of line character to include in the syslog message.
  # ITENTIAL_SYSLOG_EOL: ""

  ###########
  # BROKERS #
  ###########
  # A list of adapter types that manages the devices.
  # ITENTIAL_DEVICE_BROKER_DEFAULT_ADAPTER_PRIORITY: ""

  # Runs a command on a device.
  # ITENTIAL_DEVICE_BROKER_RUN_COMMAND_ADAPTER_PREFERENCE: ""

  # If true, the platform will perform strict JSON Schema validation on messages into the brokers
  # and coming back to the broker layer from adapters.
  # ITENTIAL_BROKER_VALIDATION_ENABLED: "false"

  ########
  # SNMP #
  ########
  # Remote SNMP destination configuration objects.
  # ITENTIAL_SNMP_ALARM_CONFIGS: '[{"ip": "localhost", "community": "public", "type": "trap", "properties": {"port": 161, "retries": 1, "timeout": 5000, "transport": "udp4", "trapPort": 162, "version": "V1"}}]'

  #
  # END IAP CONFIGURATION PROPERTIES
  #

processExporter:
  enabled: false
  image:
    repository: ncabatoff/process-exporter
    tag: latest

